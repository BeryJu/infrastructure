- hosts: localhost
  become: false
  vars:
    awx_connection: &awx_connection
      controller_host: https://awx.beryju.org
      controller_username: '{{ lookup("community.hashi_vault.hashi_vault", "secret=kv/data/services/awx:username") }}'
      controller_password: '{{ lookup("community.hashi_vault.hashi_vault", "secret=kv/data/services/awx:password") }}'
  tasks:
    - name: Credentials | Create vault type
      awx.awx.credential_type:
        name: HashiCorp Vault
        kind: net
        description: Vault but sane
        inputs:
          fields:
            - id: vault_server
              type: string
              label: URL for Vault Server
            - id: vault_token
              type: string
              label: Vault token
          required:
            - vault_server
            - vault_role_id
            - vault_secret_id
        injectors:
          env:
            VAULT_ADDR: "{{ '{{' }} vault_server {{ '}}' }}" # noqa 207
            VAULT_TOKEN: "{{ '{{' }} vault_token {{ '}}' }}" # noqa 207
        state: present
        <<: *awx_connection
    - name: Credentials | Vault
      awx.awx.credential:
        name: hc-vault
        credential_type: HashiCorp Vault
        inputs:
          vault_server: 'https://vault.beryju.org'
          vault_token: '{{ lookup("community.hashi_vault.hashi_vault", "secret=kv/data/awx/meta:token") }}'
        organization: Default
        <<: *awx_connection
    - name: Credentials | Machine SSH
      awx.awx.credential:
        name: ansible-ssh
        credential_type: Machine
        inputs:
          username: ansible
          ssh_key_data: '{{ lookup("community.hashi_vault.hashi_vault", "secret=kv/data/awx/ssh:private") }}'
        organization: Default
        <<: *awx_connection
    - name: Credentials | vCenter
      awx.awx.credential:
        name: vc-vc1
        credential_type: "VMware vCenter"
        inputs:
          host: 'vc1.prod.beryju.org'
          username: '{{ lookup("community.hashi_vault.hashi_vault", "secret=kv/data/vsphere/local/administrator:username") }}'
          password: '{{ lookup("community.hashi_vault.hashi_vault", "secret=kv/data/vsphere/local/administrator:password") }}'
        organization: Default
        <<: *awx_connection
    - name: EE | Add EE with hvac for vault
      awx.awx.execution_environment:
        name: "AWX EE latest with hvac"
        image: beryju.org/awx-ee:latest
        pull: always
        <<: *awx_connection
    - name: Instance Group | Pod template
      awx.awx.instance_group:
        name: default
        is_container_group: yes
        pod_spec_override: |
          apiVersion: v1
          kind: Pod
          metadata:
            namespace: awx
          spec:
            containers:
              - image: 'beryju.org/awx-ee:latest'
                name: worker
                args:
                  - ansible-runner
                  - worker
                  - '--private-data-dir=/runner'
                resources:
                  requests:
                    memory: "250Mi"
                    cpu: "250m"
                  limits:
                    memory: "1024Mi"
                    cpu: "1"
        <<: *awx_connection
    - name: Project | infrastructure
      awx.awx.project:
        name: "infrastructure"
        state: present
        scm_branch: master
        scm_clean: true
        scm_type: git
        scm_update_on_launch: yes
        scm_url: https://github.com/BeryJu/infrastructure.git
        default_environment: AWX EE latest with hvac
        organization: "Default"
        <<: *awx_connection
    - name: Inventory | infrastructure
      awx.awx.inventory:
        name: "git"
        state: present
        organization: "Default"
        <<: *awx_connection
    - name: Inventory Source | infrastructure
      awx.awx.inventory_source:
        name: "git"
        state: present
        inventory: git
        source: scm
        source_project: infrastructure
        source_path: hosts.yaml
        update_on_project_update: yes
        overwrite_vars: yes
        overwrite: yes
        organization: "Default"
        <<: *awx_connection
    - name: Notifications | Email
      awx.awx.notification_template:
        name: ses
        notification_type: email
        notification_configuration:
          username: '{{ lookup("community.hashi_vault.hashi_vault", "secret=kv/data/awx/aws-email:username") }}'
          password: '{{ lookup("community.hashi_vault.hashi_vault", "secret=kv/data/awx/aws-email:password") }}'
          sender: awx@services.beryju.org
          recipients:
            - jens@beryju.org
          host: email-smtp.eu-central-1.amazonaws.com
          port: 587
          use_tls: yes
          use_ssl: no
        state: present
        organization: "Default"
        <<: *awx_connection
    - name: Jobs | Static
      awx.awx.job_template:
        name: "{{ item.name }}"
        state: "present"
        organization: "Default"
        job_type: "run"
        inventory: "git"
        project: "infrastructure"
        playbook: "{{ item.playbook }}"
        credentials:
          - "ansible-ssh"
          - "hc-vault"
        diff_mode: yes
        timeout: 3600
        job_slice_count: "{{ item.job_slice_count|default(1) }}"
        extra_vars:
          ansible_python_interpreter: /usr/bin/python3
        notification_templates_error:
          - ses
        <<: *awx_connection
      loop:
        - name: infrastructure-full
          playbook: site.yml
          job_slice_count: 4
        - name: infrastructure-awx
          playbook: awx/site.yaml
        - name: infrastructure-actions-docker-cleanup
          playbook: actions/cleanup.yml
          job_slice_count: 4
        - name: infrastructure-actions-system-update
          playbook: actions/update.yml
          job_slice_count: 4
        - name: infrastructure-actions-kick-cmk
          playbook: actions/kick-cmk.yml
          job_slice_count: 4
        - name: infrastructure-git-backup
          playbook: backups/site.yaml
        - name: infrastructure-vsphere
          playbook: vsphere/site.yaml
    - name: Jobs | Survey
      awx.awx.job_template:
        name: "{{ item.name }}"
        state: "present"
        organization: "Default"
        job_type: "run"
        inventory: "git"
        project: "infrastructure"
        playbook: "{{ item.playbook }}"
        credentials:
          - "ansible-ssh"
          - "hc-vault"
        diff_mode: yes
        survey_enabled: yes
        timeout: 3600
        survey_spec: "{{ item.survey }}"
        extra_vars:
          ansible_python_interpreter: /usr/bin/python3
        notification_templates_error:
          - ses
        notification_templates_success:
          - ses
        <<: *awx_connection
      loop:
        - name: new-vm
          playbook: provisioning/new-vm.yml
          survey: "{{ lookup('file', 'new-vm.json') }}"
        - name: new-vm (VPS)
          playbook: provisioning/new-vm.yml
          survey: "{{ lookup('file', 'new-vm-vps.json') }}"
    - name: Job Schedules
      awx.awx.schedule:
        name: "{{ item.name }}"
        state: present
        unified_job_template: "{{ item.job }}"
        rrule: "{{ item.rrule }}"
        # enabled: true
        <<: *awx_connection
      loop:
        - name: infrastructure-actions-docker-cleanup
          job: "infrastructure-actions-docker-cleanup"
          rrule: "{{ query('awx.awx.schedule_rrule', 'hour', every='6', timezone='Etc/UTC', start_date='1970-01-01 00:00:00') }}"
        - name: infrastructure-actions-kick-cmk
          job: "infrastructure-actions-kick-cmk"
          rrule: "{{ query('awx.awx.schedule_rrule', 'hour', every='12', timezone='Etc/UTC', start_date='1970-01-01 00:00:00') }}"
        - name: infrastructure-awx
          job: "infrastructure-awx"
          rrule: "{{ query('awx.awx.schedule_rrule', 'hour', every='3', timezone='Etc/UTC', start_date='1970-01-01 00:00:00') }}"
        - name: infrastructure-actions-system-update
          job: "infrastructure-actions-system-update"
          rrule: "{{ query('awx.awx.schedule_rrule', 'hour', every='6', timezone='Etc/UTC', start_date='1970-01-01 00:30:00') }}"
        - name: infrastructure
          job: "infrastructure-full"
          rrule: "{{ query('awx.awx.schedule_rrule', 'hour', every='2', timezone='Etc/UTC', start_date='1970-01-01 01:00:00') }}"
        - name: infrastructure-git-backup
          job: "infrastructure-git-backup"
          rrule: "{{ query('awx.awx.schedule_rrule', 'hour', every='1', timezone='Etc/UTC', start_date='1970-01-01 00:00:00') }}"
        - name: infrastructure-vsphere
          job: "infrastructure-vsphere"
          rrule: "{{ query('awx.awx.schedule_rrule', 'hour', every='1', timezone='Etc/UTC', start_date='1970-01-01 00:00:00') }}"
    - name: Settings
      awx.awx.settings:
        settings:
          TOWER_URL_BASE: https://awx.beryju.org/
          LOGIN_REDIRECT_OVERRIDE: https://awx.beryju.org/sso/login/saml/?idp=authentik
          SAML_AUTO_CREATE_OBJECTS: true
          SOCIAL_AUTH_SAML_CALLBACK_URL: https://awx.beryju.org/sso/complete/saml/
          SOCIAL_AUTH_SAML_METADATA_URL: https://awx.beryju.org/sso/metadata/saml/
          SOCIAL_AUTH_SAML_SP_ENTITY_ID: awx
          SOCIAL_AUTH_SAML_SP_PUBLIC_CERT: |-
            -----BEGIN CERTIFICATE-----
            MIIDEzCCAfugAwIBAgIQfT30xLBpQ9m/WnSREIeLQTANBgkqhkiG9w0BAQsFADAd
            MRswGQYDVQQDDBJhdXRoZW50aWsgMjAyMS42LjQwHhcNMjEwNzA1MTAyOTE3WhcN
            MzEwNzA0MTAyOTE3WjBNMSEwHwYDVQQDDBhhdXRoZW50aWsgc2VsZi1zaWduZWQg
            djIxEjAQBgNVBAoMCWF1dGhlbnRpazEUMBIGA1UECwwLU2VsZi1zaWduZWQwggEi
            MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC2kwDjuxHe59jCHgIXWlrmYdsq
            Yba8boIotik3LlQw29v3tqm0sCZoykZgZbA1Chfm1peVnHAGNe95BmX9JqH0CRiQ
            iFMw4Hx7sSht73do5/2nui5nMFICMMeVxHVTL8IJkrS0vySoh5ZSX6UGsbf+PVbm
            7QKMyQta3iXr/z6XA4w6ywQXq4mFEanTogQerxNAKe7Vjv0Mfxb/hn984jV6kU09
            X+wHQHMW03mqbqjiZvLpZ1yMCnHh+tN0SHpbCf2Kf9ZRsWd51M7Za1xwROrANHtf
            1W6JxuajJaViw2fnCbKZJahoYBU2W1eALqPpuv4DPthkYK/zyiSDAuddbS+XAgMB
            AAGjHzAdMBsGA1UdEQEB/wQRMA+CDWlkLmJlcnlqdS5vcmcwDQYJKoZIhvcNAQEL
            BQADggEBAALcKrnPCDmqSLvAewS/Z9ipYn3SMnKCQ6n7XOc+LNUAdekhySUy3Zta
            GdYsVYpM9h9ae88GaZuFCwgoRL07uV2XfcbTmXogHvPzA5YEdt3I7S9dP64xPdJm
            cnyGdlRhMgyg4HgQko1mgzrDKlJqrjuOwYqz/udFzaYO4/matu9Nwoj2MZX+XnPF
            PGrlsFc9gUGFX/oO8Niqt836htlK4QfrsONd3m/LdrJdhWD2m4rMpBQDXyA3fDiw
            drzK1C4s7ZLIQ7ZRLr7+1HvPNPePqGFbKoBxD+7v1rDvhUfAbL3TBDhi+d85WoFO
            lY2K9A4o+j3F7Bl2A2mf/M+Yi1zo/wA=
            -----END CERTIFICATE-----
          SOCIAL_AUTH_SAML_ORG_INFO:
            en-US:
              name: authentik
              displayname: authentik
              url: https://id.beryju.org
          SOCIAL_AUTH_SAML_TECHNICAL_CONTACT:
            givenName: Jens Langhammer
            emailAddress: jens@beryju.org
          SOCIAL_AUTH_SAML_SUPPORT_CONTACT:
            givenName: Jens Langhammer
            emailAddress: jens@beryju.org
          SOCIAL_AUTH_SAML_ENABLED_IDPS:
            authentik:
              attr_first_name: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name
              attr_username: http://schemas.goauthentik.io/2021/02/saml/username
              url: https://id.beryju.org/application/saml/ansible-awx/sso/binding/redirect/
              entity_id: https://awx.beryju.org/sso/metadata/saml/
              x509cert: MIIDEzCCAfugAwIBAgIQfT30xLBpQ9m/WnSREIeLQTANBgkqhkiG9w0BAQsFADAdMRswGQYDVQQDDBJhdXRoZW50aWsgMjAyMS42LjQwHhcNMjEwNzA1MTAyOTE3WhcNMzEwNzA0MTAyOTE3WjBNMSEwHwYDVQQDDBhhdXRoZW50aWsgc2VsZi1zaWduZWQgdjIxEjAQBgNVBAoMCWF1dGhlbnRpazEUMBIGA1UECwwLU2VsZi1zaWduZWQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC2kwDjuxHe59jCHgIXWlrmYdsqYba8boIotik3LlQw29v3tqm0sCZoykZgZbA1Chfm1peVnHAGNe95BmX9JqH0CRiQiFMw4Hx7sSht73do5/2nui5nMFICMMeVxHVTL8IJkrS0vySoh5ZSX6UGsbf+PVbm7QKMyQta3iXr/z6XA4w6ywQXq4mFEanTogQerxNAKe7Vjv0Mfxb/hn984jV6kU09X+wHQHMW03mqbqjiZvLpZ1yMCnHh+tN0SHpbCf2Kf9ZRsWd51M7Za1xwROrANHtf1W6JxuajJaViw2fnCbKZJahoYBU2W1eALqPpuv4DPthkYK/zyiSDAuddbS+XAgMBAAGjHzAdMBsGA1UdEQEB/wQRMA+CDWlkLmJlcnlqdS5vcmcwDQYJKoZIhvcNAQELBQADggEBAALcKrnPCDmqSLvAewS/Z9ipYn3SMnKCQ6n7XOc+LNUAdekhySUy3ZtaGdYsVYpM9h9ae88GaZuFCwgoRL07uV2XfcbTmXogHvPzA5YEdt3I7S9dP64xPdJmcnyGdlRhMgyg4HgQko1mgzrDKlJqrjuOwYqz/udFzaYO4/matu9Nwoj2MZX+XnPFPGrlsFc9gUGFX/oO8Niqt836htlK4QfrsONd3m/LdrJdhWD2m4rMpBQDXyA3fDiwdrzK1C4s7ZLIQ7ZRLr7+1HvPNPePqGFbKoBxD+7v1rDvhUfAbL3TBDhi+d85WoFOlY2K9A4o+j3F7Bl2A2mf/M+Yi1zo/wA= # noqa 204
              attr_email: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress
              attr_user_permanent_id: http://schemas.goauthentik.io/2021/02/saml/uid
          SOCIAL_AUTH_SAML_SECURITY_CONFIG:
            requestedAuthnContext: false
        <<: *awx_connection
