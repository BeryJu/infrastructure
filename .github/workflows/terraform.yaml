name: "Terraform"

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: self-hosted
    permissions:
      contents: read
      id-token: write
    env:
      VAULT_ADDR: https://vault.beryju.org
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Import Secrets
        uses: hashicorp/vault-action@v2.4.0
        id: secrets
        with:
          exportEnv: true
          url: https://vault.beryju.org
          path: github-actions
          method: jwt
          role: github-terraform
          exportToken: true
          secrets: |
            kv/data/dockerhub username

      - name: Terraform Format
        id: fmt
        run: cd tf && terraform fmt -check

      - name: Terraform Init
        id: init
        run: cd tf && terraform init

      - name: Terraform Validate
        id: validate
        run: cd tf && terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: cd tf && terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@v6.0.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: cd tf && terraform apply -auto-approve -input=false
