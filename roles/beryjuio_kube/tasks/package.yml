- name: k8s | install pre-dependencies
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg
  register: apt_res
  retries: 5
  until: apt_res is success
- name: k8s | apt repo
  ansible.builtin.deb822_repository:
    name: kubernetes
    uris: "https://pkgs.k8s.io/core:/stable:/{{ beryjuio_kube_version }}/deb/"
    types: [deb]
    suites: ["/"]
    signed_by: https://pkgs.k8s.io/core:/stable:/{{ beryjuio_kube_version }}/deb/Release.key
    state: present
    enabled: true
  register: apt_repo
  notify:
    - Apt update
- ansible.builtin.meta: flush_handlers
- name: kubernetes | packages
  ansible.builtin.apt:
    pkg:
      - kubelet
      - kubeadm
      - kubectl
    # We control the major version via variable, we always want the latest patch
    state: latest # noqa: package-latest
  register: apt_res
  retries: 5
  until: apt_res is success
- name: kubernetes | kubeadm config
  ansible.builtin.template:
    src: "templates/kubeadm_config.yml"
    dest: /etc/kubernetes/kubeadmin-config.yml
    mode: "600"
    owner: root
    group: root
  register: kubeadm_config
  notify:
    - Update kubeadm config
- ansible.builtin.meta: flush_handlers
- name: kubernetes | upgrade
  ansible.builtin.command: kubeadm upgrade apply latest --config /etc/kubernetes/kubeadmin-config.yml -y
  when: "apt_repo.changed or kubeadm_config.changed"
  changed_when: true
